{"ast":null,"code":"var _jsxFileName = \"D:\\\\Minor_Project\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Import necessary modules\nimport React, { useContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\n\n// Define the base URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\n\n// Create the global context\nconst GlobalContext = /*#__PURE__*/React.createContext();\n\n// Define the global provider component\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // Define states for incomes, expenses, and error\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Fetch incomes and expenses when the component mounts\n  useEffect(() => {\n    getIncomes();\n    getExpenses();\n  }, []);\n\n  // Fetch incomes from the server\n  const getIncomes = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-incomes`);\n      setIncomes(response.data);\n    } catch (error) {\n      setError(error.response.data.message);\n    }\n  };\n\n  // Fetch expenses from the server\n  const getExpenses = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-expenses`);\n      setExpenses(response.data);\n    } catch (error) {\n      setError(error.response.data.message);\n    }\n  };\n\n  // Return the total income\n  const totalIncome = () => {\n    return incomes.reduce((total, income) => total + income.amount, 0);\n  };\n\n  // Return the total expenses\n  const totalExpenses = () => {\n    return expenses.reduce((total, expense) => total + expense.amount, 0);\n  };\n\n  // Return the total balance\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n\n  // Return the transaction history\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    return history.slice(0, 3);\n  };\n\n  // Provide the values to the context\n  const values = {\n    incomes,\n    expenses,\n    error,\n    totalIncome,\n    totalExpenses,\n    totalBalance,\n    transactionHistory,\n    getIncomes,\n    getExpenses\n  };\n\n  // Provide the context to the children\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n// Create a custom hook to consume the context\n_s(GlobalProvider, \"C5hJzJWvNypkpmTtlsf8SGGGlns=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","useEffect","axios","BASE_URL","GlobalContext","createContext","GlobalProvider","children","incomes","setIncomes","expenses","setExpenses","error","setError","getIncomes","getExpenses","response","get","data","message","totalIncome","reduce","total","income","amount","totalExpenses","expense","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","slice","values","useGlobalContext"],"sources":["D:/Minor_Project/frontend/src/context/globalContext.js"],"sourcesContent":["// Import necessary modules\nimport React, { useContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\n\n// Define the base URL\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\n\n// Create the global context\nconst GlobalContext = React.createContext();\n\n// Define the global provider component\nexport const GlobalProvider = ({ children }) => {\n    // Define states for incomes, expenses, and error\n    const [incomes, setIncomes] = useState([]);\n    const [expenses, setExpenses] = useState([]);\n    const [error, setError] = useState(null);\n\n    // Fetch incomes and expenses when the component mounts\n    useEffect(() => {\n        getIncomes();\n        getExpenses();\n    }, []);\n\n    // Fetch incomes from the server\n    const getIncomes = async () => {\n        try {\n            const response = await axios.get(`${BASE_URL}get-incomes`);\n            setIncomes(response.data);\n        } catch (error) {\n            setError(error.response.data.message);\n        }\n    };\n\n    // Fetch expenses from the server\n    const getExpenses = async () => {\n        try {\n            const response = await axios.get(`${BASE_URL}get-expenses`);\n            setExpenses(response.data);\n        } catch (error) {\n            setError(error.response.data.message);\n        }\n    };\n\n    // Return the total income\n    const totalIncome = () => {\n        return incomes.reduce((total, income) => total + income.amount, 0);\n    };\n\n    // Return the total expenses\n    const totalExpenses = () => {\n        return expenses.reduce((total, expense) => total + expense.amount, 0);\n    };\n\n    // Return the total balance\n    const totalBalance = () => {\n        return totalIncome() - totalExpenses();\n    };\n\n    // Return the transaction history\n    const transactionHistory = () => {\n        const history = [...incomes, ...expenses];\n        history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n        return history.slice(0, 3);\n    };\n\n    // Provide the values to the context\n    const values = {\n        incomes,\n        expenses,\n        error,\n        totalIncome,\n        totalExpenses,\n        totalBalance,\n        transactionHistory,\n        getIncomes,\n        getExpenses\n    };\n\n    // Provide the context to the children\n    return (\n        <GlobalContext.Provider value={values}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\n// Create a custom hook to consume the context\nexport const useGlobalContext = () => {\n    return useContext(GlobalContext);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}